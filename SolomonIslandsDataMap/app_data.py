# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_app.ipynb.

# %% auto 0
__all__ = ['app', 'server', 'navbar']

# %% ../nbs/05_app.ipynb 2
from nbdev.showdoc import *
try:
    from SolomonIslandsDataMap.app_data import sidebar
    from SolomonIslandsDataMap.pages.map_page import *
    from SolomonIslandsDataMap.pages.table_page import *
    from SolomonIslandsDataMap.pages.app_data import sidebar
except: 
    from app_data import sidebar
    from pages.map_page import *
    from pages.table_page import *
    from pages.app_data import sidebar

import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio # Unless this is used graphs will not be dynamic?
import numpy as np
from fastcore.test import *
from dash import Dash, dcc, Output, Input, State, html, Patch, ctx  # pip install dash
import dash_bootstrap_components as dbc    # pip install dash-bootstrap-components
from dash_bootstrap_templates import load_figure_template

# %% ../nbs/05_app.ipynb 5
app = Dash(__name__, external_stylesheets=[dbc.themes.MINTY], use_pages=True)
server = app.server
load_figure_template("minty")

# %% ../nbs/05_app.ipynb 7
navbar = dbc.NavbarSimple(
    children=[
        dbc.NavItem(dbc.NavLink("Census Data", href="#")),
        dbc.DropdownMenu(
            children=[
                dbc.DropdownMenuItem("More pages coming soon", header=True),
                
                dbc.DropdownMenuItem("Population Projection", href="#"),
                # TODO populate this with the pages
            ],
            nav=True,
            in_navbar=True,
            label="More",
        ),
    ],
    brand="Solomon Islands Data Map",
    brand_href="#",
    color="primary",
    #dark=True,
    class_name="navbar navbar-expand-lg bg-primary"
)


# %% ../nbs/05_app.ipynb 11
app.layout = dbc.Container([
                dbc.Row([
                    navbar
                ]),
                dbc.Row(
                    [dbc.Col(sidebar, width = 2),
                    dbc.Col(dash.page_container, width = 10)
                     ], justify = 'center'),                    
                ], fluid = True)

# %% ../nbs/05_app.ipynb 13
# Run app
if __name__=='__main__':
    try:
        app.run_server(debug=True, port=9999) # Random int mitigates port collision
    except:
        print("Cannot run server here")
